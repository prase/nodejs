'use strict';

var services = angular.module('parkedex.services');

services.factory('Geolocation', ['$q', '$http', '$cordovaGeolocation', function ($q, $http, $cordovaGeolocation) {
	
	var lastPoint = null;
	var posOptions = {
		timeout: 10000,
		enableHighAccuracy: false
	};

	return {
		getLastPoint : function () {
			return lastPoint;
		},
		getLocation: function () {
			
			return $cordovaGeolocation
		    .getCurrentPosition(posOptions)
		    .then(function (position) {
				lastPoint = {
					latitude: position.coords.latitude,
					longitude: position.coords.longitude
				};
				return position;
			}, function (error) {
				console.log ('geopositioning failed');
				return $q.reject(error);
			});
		},
		getLocationFromAddress : function (address) {
			return $http.get('http://maps.googleapis.com/maps/api/geocode/json?address='+address+'&sensor=true').then(function (response) {
				if (response.data.results[0].geometry.location.lat == null){
					$q.reject('No result.');
				}
				var res = {
					latitude: response.data.results[0].geometry.location.lat,
					longitude: response.data.results[0].geometry.location.lng
				};
				console.log (JSON.stringify (res));
				return res;
			}, function (error) {
				return $q.reject(error);
			});
		},
		getAddressFromLocation : function (latlngObj) {
			return $http.get('http://maps.googleapis.com/maps/api/geocode/json?latlng='+latlngObj.latitude+','+latlngObj.longitude+'&sensor=true&language=de').then(function (response) {
				
				if (response.data.status !== 'OK'){
					console.log ('error with google geolocation.');
					return $q.reject(response.data.status);
				}
				console.log ('address found.');
				for (var i = 0; i < response.data.results.length; i++) {
					if (response.data.results[i].types.indexOf ('locality') == 0){
						return response.data.results[i].address_components[0].long_name;
					}
				}
			}, function (error) {
				return $q.reject(error);
			});
		}
	};
}]);