define( [
    'jquery',
    '../../../../bower_components/underscore/underscore',
    'backbone',
		'hbs!templates/header',
], function( $, _, Backbone, headerTemplate, Platform ) {
	var HeaderView = Backbone.View.extend( {
		toSignIn:false,
		//tagName: 'div',
		shareDefault: {
			message: null,
			subject: null,
			image: null,
			link: null,
		},
		share: null,

		gpsCallback: function( position ) {
			alert(
				' -- No GPS callback allocated -- ' + '\n' +
				'Latitude: '	+ position.coords.latitude + '\n' +
				'Longitude: '         + position.coords.longitude         + '\n' +
				'Altitude: '          + position.coords.altitude          + '\n' +
				'Accuracy: '          + position.coords.accuracy          + '\n' +
				'Altitude Accuracy: ' + position.coords.altitudeAccuracy  + '\n' +
				'Heading: '           + position.coords.heading           + '\n' +
				'Speed: '             + position.coords.speed             + '\n' +
				'Timestamp: '         + position.timestamp                + '\n'
			);
		},

		hammerEvents: {

		},
		hammerOptions: {

		},
		events: {
			'click .shareButton': 'toShare',
			'click .toggleMenu': 'toggleMenu',
			'click .getCurrentPosition': 'getCurrentPosition',
			'click .fa-arrow-left': 'back',
			'click .fa-chevron-left': 'back',
			'click .fa-user': 'me',
			'show.bs.dropdown .dropdown': 'trackMenuEvent'
		},

		trackMenuEvent: function( event ) {
			event.preventDefault;

			if ( navigator.mixpanel ) {
				navigator.mixpanel.track(
					'Menu open',
					{},
					function() { },
					function( message ) {
						console.log( 'mixpanel error' + message );
					}
				);
			}
		},

		back: function() {
			if( this.toSignIn ){
				window.app.router.signOut();
			}
			else{
				window.app.router.goBack();
			}
		},

		theoryTest: function(){
			alert('two');
			try{
					var learnerJSON = window.localStorage.getItem( 'learner' );
					var learner = JSON.parse( learnerJSON );
					var accessToken = window.localStorage.getItem( 'accessToken' );
					plugins.theory.startTheory(accessToken, config.apiURL, learner.id.toString() , function(){


					},function(err){});
				}
				catch (err) {

					trackJs.track(err); // can either pass an actual Error object or a string
				}

		},

		learner: {},

		initialize: function( data ) {
			this.render( data );

			// fix issue with double events
			$( this.el ).off();
		},

		render: function( data ) {
			var self = this;
			// clear the share
			this.share = this.shareDefault;

			if ( data && data.share && _.isObject( data.share ) ) {
				this.share = data.share;
				data.showShare = true;
			}

			if ( data && data.gps && _.isFunction( data.gps ) ) {
				this.gpsCallback = data.gps;
				data.showGps = true;
			}

			var params = data || {};
			var compiledTemplate = headerTemplate( params );
			this.$el.html( compiledTemplate );

			if ( data && data.menu && _.isObject( data.menu ) ) {
				_.each( data.menu, function( menuValue ) {
					if ( menuValue.class && menuValue.action ) {
						self.$el.find( '.' + menuValue.class ).on( 'click', menuValue.action );
					}
				} );

			}

			return this;

		},

		toShare: function( event ) {
			event.preventDefault;

			if ( window.plugins && window.plugins.socialsharing ) {

				// https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin/

				// image can be an web URL or base64 (not supported on Android 2.x)
				// multiple images needs to be an array

				window.plugins.socialsharing.share(
					this.share.message,
					this.share.subject,
					this.share.image,
					this.share.link
				);

			} else {
				alert( 'sharing message: ' + this.share.message + "\n"
					+ 'subject: ' + this.share.subject + "\n"
					+ 'image: ' + this.share.image + "\n"
					+ 'link: ' + this.share.link
				);
			}
		},

		toggleMenu: function( event ) {
			event.preventDefault;
			$( "#slide-menu" ).slideToggle( 'fast' );
		},

		getCurrentPosition: function( event ) {
			event.preventDefault;
			var self = this;

			// need to create a callback to collect the position like this:
			//	var gpsCallback = function( position ) {
			//		if ( position ) {
			//			alert( 'callback: ' + position.coords.latitude + ' ' + position.coords.longitude );
			//		}
			//	};

			if ( !_.isUndefined( navigator ) && !_.isUndefined( navigator.geolocation ) ) {
				navigator.geolocation.getCurrentPosition(
					self.gpsCallback,
					function( error ) {
						alert( 'code: ' + error.code + "\n" + 'message: ' + error.message );
					}
				);
			}

		},

		me: function( event ) {
			event.preventDefault;
			var self = this;

			if ( navigator.mixpanel ) {
				navigator.mixpanel.track(
					'Profile view',
					{},
					function() { },
					function( message ) {
						console.log( 'mixpanel error' + message );
					}
				);
			}

			$( '.previous-drives-content, .activities-content' ).toggle();
		}

	} );

	return HeaderView;
} );
