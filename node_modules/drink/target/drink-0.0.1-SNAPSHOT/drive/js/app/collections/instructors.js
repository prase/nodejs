"use strict";
define( [
  '../../../../bower_components/underscore/underscore',
  'backbone',
	'models/instructor',
	'config'
], function( _, Backbone, InstructorModel, config ){

	var Instructors = Backbone.Collection.extend({

		model : InstructorModel,
		latitude: '',
		longitude: '',
		initialize: function( latitude, longitude ) {
			this.latitude = latitude;
			this.longitude = longitude;
			this.queryString = '';
		},

		url : function() {

			//if we are using a url that was returned from the search api - use it instead
			/*if(this.urlFromSearch){
				var urlToCall = this.urlFromSearch;
				this.urlFromSearch = null;

				return urlToCall;
			}*/
			//console.log(config.apiURL + "/instructors/" + this.latitude + ',' + this.longitude + this.queryString + (this.queryString ? "&rpp=10" : "?rpp=10"));
			// need rpp to ensure we get 10 results for mobile
			return config.apiURL + "/instructors/" + this.latitude + ',' + this.longitude + this.queryString + (this.queryString ? "&rpp=10" : "?rpp=10");
		},

		parse: function( response ) {
			//console.log(response);
			if ( response.pages.next ) {
				if( response.pages.next != this.nextUrl ){
					this.nextUrl = response.pages.next;
					this.newUrl = true;

					var sub = response.pages.next.split("?");
					//$( '#console' ).html( 'results' + JSON.stringify( response.pages ) );
					//console.log(response.pages.next);
					if(sub.length > 0){

						this.queryString = '?' + sub[1];
					}
				}

			}

			if ( response.instructors ) {
				return response.instructors;
			}
		},

		queryString: '',
		urlFromSearch: null,
		nextUrl: '',
		newUrl: false

	});

	return Instructors;
} );
