define( [
    'jquery',
    '../../../../bower_components/underscore/underscore',
    'backbone',
		'models/instructor',
		'hbs!templates/myInstructor',
		'i18next',
		'models/instructor'

], function( $, _, Backbone, InstructorModel, myInstructorTemplate, i18next, LearnerModel ) {
	var InstructorView = Backbone.View.extend( {

		/*
		 *
		 * PN:
		 * THIS VIEW IS NO LONGER USED - MOVED CODE OVER TO INSTRUCTORDETAIL - SAVED FOR REFERENCE FOR THE MOMENT
		 *
		 */


		//el: '#app',
		events: {
			'click #instructorCall': 'call',
			'click #instructorEmail': 'email',
			'click #instructorReview': 'review',
			'click #instructorChange': 'remove'
		},

		call: function ( ) {

			var tel = 'tel:' + number;
			window.location.href = tel;
		},

		email: function ( ) {

			var self = this;
			var learnerString = window.localStorage.getItem( 'learner' );
			var learner = JSON.parse( learnerString );

			if(window.plugin.email) {
				window.plugin.email.open({
						to:      [currentInstructor.email],
						subject: i18next.t( "instructorDetail.email.subject" ),
						body:    i18next.t( "instructorDetail.email.body", {
							currentInstructorGivenName: model.givenName,
							learnerEmail: learner.email,
							learnerGivenName: learner.givenName,
							learnerFamilyName: learner.familyName
						})

				});
			}
		},

		review: function ( ) {

			var learnerJSON = window.localStorage.getItem( 'learner' );
			var learner = JSON.parse( learnerJSON );

			var self = this;

		},

		render: function( ) {

			if( typeof analytics !== 'undefined' ){
				analytics.trackView( 'Your Instructor' );
			}

			var self = this;

			var instructorString = window.localStorage.getItem( 'myInstructor' );
			var instructor = JSON.parse( instructorString );

			//set the model from the localstorage object
			self.model = new InstructorModel( instructor );
			var compiledTemplate = myInstructorTemplate( instructor );
			self.$el.html( compiledTemplate );
			window.app.router.postRender( self );

		}


	} );

	return InstructorView;
} );
